.TH "program.cc" 3 "Dc Mai 20 2020" "Version v6.3 19/05/2020" "Creació d'un arbre filogenètic. Xavier Coll Ribas" \" -*- nroff -*-
.ad l
.nh
.SH NAME
program.cc \- El main del programa\&.  

.SH SYNOPSIS
.br
.PP
.SS "Funcions"

.in +1c
.ti -1c
.RI "int \fBmain\fP ()"
.br
.RI "El main del programa\&. "
.in -1c
.SH "Descripció Detallada"
.PP 
El main del programa\&. 


.PP
\fBAutor\fP
.RS 4
Xavier Coll Ribas 
.RE
.PP

.PP
Definició al fitxer \fBprogram\&.cc\fP\&.
.SH "Documentació de les Funcions"
.PP 
.SS "int main ()"

.PP
El main del programa\&. 
.PP
Definició a la línia 133 del fitxer program\&.cc\&.
.PP
.nf
133            {
134   // int k > 0
135   int k; 
136   cin >> k;
137   
138   Cjt_especies conjunt; // Iniciem un conjunt d'espècies buit\&.
139   Cjt_clusters cjt_clusters; // Iniciem un conjunt de clusters buit\&.
140   Especie especie; // Iniciem una espècie buida\&. Només la farem servir per introduir el paràmetre k\&.
141   especie\&.set_parametro(k);
142   
143   string opcio; // String per anar escollint les opcions del programa\&.
144   cin >> opcio;
145 
146   // El programa acaba quan la string opcio == fin\&.
147   while (opcio != "fin") {
148     string id, id2, gen; // Declarem aquests string que són els que necessitarem 
149                // majoritariament al nostre programa\&.
150 
151     if (opcio == "crea_especie") {
152       cin >> id >> gen; // El identificador de la espècie amb el seu gen\&.
153       cout << "# " << opcio << " " << id << " " << gen << endl;
154       if (conjunt\&.existeix_especie(id)) cout << "ERROR: La especie " << id << " ya existe\&." << endl; // En cas que la espècie ja existeixi dins el conjunt salta un missatge d'error\&.
155       else {
156       conjunt\&.crea_especie(id,gen);
157       }
158       cout << endl;
159     }
160     
161     else if (opcio == "obtener_gen") {
162       cin >> id; // El identificador de la espècie que es vol consultar el gen\&.
163       cout << "# " << opcio << " " << id << endl;
164       if (conjunt\&.existeix_especie(id)) conjunt\&.obtener_gen(id);
165       else cout << "ERROR: La especie " << id << " no existe\&." << endl; // En cas que la espècie no existeix dins el conjunt, salta un missatge d'error\&.
166       cout << endl;
167 
168     }
169     else if (opcio == "distancia") {
170       cin >> id >> id2; // Els dos identificadors de les espècies les quals es vol consultar la distància\&.
171       cout << "# " << opcio << " " << id << " " << id2 << endl;
172       // Depenent el que ens retorni la funció calcular distància, tindrà un 
173       // significat diferent\&. Consultar la documentació per més detalls\&.
174       if (conjunt\&.calcular_distancia(id,id2) == -1)  cout << "ERROR: La espècie " << id << " y la espècie " << id2 << " no existen\&." << endl;
175       else if (conjunt\&.calcular_distancia(id,id2) == -2)   cout << "ERROR: La espècie " << id << " no existe\&." << endl;
176       else if (conjunt\&.calcular_distancia(id,id2) == -3) cout << "ERROR: La espècie " << id2 << " no existe\&." << endl;
177       else cout << conjunt\&.calcular_distancia(id,id2) << endl;
178       
179       cout << endl;
180     }
181     else if (opcio == "elimina_especie") {
182       cin >> id; // El identificador de la espècie la qual es vol eliminar\&.
183       cout << "# " << opcio << " " << id << endl;
184       if (not conjunt\&.existeix_especie(id)) cout << "ERROR: La especie " << id << " no existe\&." << endl; // Si la espècie no existeix dins el conjunt, salta un missatge d'error\&.
185       else conjunt\&.elimina_especie(id);
186       cout << endl;
187     }
188     else if (opcio == "existe_especie") {
189       cin >> id; // El identificador de la espècie la qual es vol consultar si existeix\&.
190       cout << "# " << opcio << " " << id <<endl;
191       if (conjunt\&.existeix_especie(id)) cout << "SI" << endl;
192       else cout << "NO" << endl;
193       cout << endl;
194     }
195     else if (opcio == "lee_cjt_especies") {
196       // Funció que llegeix les espècies que hi haurà al conjunt\&.
197       cout << "# " << opcio <<  endl;
198       conjunt\&.lee_cjt_especies();
199       cout << endl;
200     }
201     else if (opcio == "imprime_cjt_especies") {
202       // Funció que imprimeix les espècies que hi ha al conjunt\&.
203       // En cas de no haver cap espècie, no dona cap missatge d'error\&.
204       cout << "# " << opcio << endl;
205       conjunt\&.imprime_cjt_especies();
206       cout << endl;
207     }
208     else if (opcio == "tabla_distancias") {
209       // Funció que imprimeix la taula de distancies entre les espècies que hi ha al conjunt\&.
210       // En cas de no haver cap espècie, no dona cap missatge d'error\&.
211       cout << "# " << opcio << endl;
212       conjunt\&.tabla_distancias();
213       cout << endl;
214     }
215     else if (opcio == "inicializa_clusters") {
216       cout << "# " << opcio << endl;
217       // Declarem el booleà a = true, ja que així ens assegurem que cada vegada que cridem
218       // la funció inicialitza clusters ens imprimeixi la taula de distancies entre clusters\&.
219       bool a = true;
220       cjt_clusters\&.inicialitza_clusters(conjunt, a);
221       cout << endl;
222     }
223     else if (opcio == "ejecuta_paso_wpgma") {
224       cout << "# " << opcio << endl;
225       // Declarem el booleà a = true, ja que així ens assegurem que cada vegada que cridem
226       // la funció inicialitza clusters ens imprimeixi la taula de distancies entre clusters\&.
227       bool a = true;
228       cjt_clusters\&.ejecuta_paso_wpgma(a);
229       cout << endl;
230     }
231     else if (opcio == "imprime_cluster") {
232       cin >> id; // El identificador del cluster el qual es vol imprimir\&.
233       cout << "# " << opcio << " " << id << endl;
234       cjt_clusters\&.imprime_cluster(id);
235       cout << endl;
236     }
237     else if (opcio == "imprime_arbol_filogenetico") {
238       // Donat un conjunt de espècies, s'imprimeix 
239       // l'arbre filogenètic resultant\&.
240       cout << "# " << opcio << endl;
241       cjt_clusters\&.imprime_arbol_filogenetico(conjunt);
242       cout << endl;
243       
244     }
245   cin >> opcio;
246   }
247 
248 }
.fi
.SH "Autor"
.PP 
Generat automàticament per Doxygen per a Creació d'un arbre filogenètic\&. Xavier Coll Ribas a partir del codi font\&.
