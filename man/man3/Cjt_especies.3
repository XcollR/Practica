.TH "Cjt_especies" 3 "Dv Mai 15 2020" "Version 15/05/2020" "Creació d'un arbre filogenètic. Xavier Coll Ribas" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Cjt_especies \- Representa un conjunt d'espècies ordenades alfabèticament\&.  

.SH SYNOPSIS
.br
.PP
.SS "Mètodes públics"

.in +1c
.ti -1c
.RI "\fBCjt_especies\fP ()"
.br
.RI "Crea un conjunt d'espècies buit\&. "
.ti -1c
.RI "void \fBcrea_especie\fP (const string &id, const string &gen)"
.br
.RI "Crea una espècie i la introdueix al conjunt\&. "
.ti -1c
.RI "void \fBelimina_especie\fP (const string &id)"
.br
.RI "Elimina la espècie indicada del conjunt d'espècies\&. "
.ti -1c
.RI "bool \fBexisteix_especie\fP (const string &id) const"
.br
.RI "Consulta si existeix la espècie indicada\&. "
.ti -1c
.RI "double \fBcalcular_distancia\fP (const string &id, const string &id2) const"
.br
.RI "Consulta la distàncie entre dues espècies\&. "
.ti -1c
.RI "void \fBobtener_gen\fP (const string &id) const"
.br
.RI "Consulta el gen de la espècie demanada\&. "
.ti -1c
.RI "bool \fBfinal\fP ()"
.br
.RI "Consulta si l'iterador del mapa del conjunt d'especies apunta al final d'ell o no\&. "
.ti -1c
.RI "void \fBinicio\fP ()"
.br
.RI "Posiciona l'iterador del mapa del conjunt d'especies apuntant al primer element\&. "
.ti -1c
.RI "void \fBactual\fP (string &act)"
.br
.RI "El paràmetre explícit passa a tenir la informació del element apuntat pel iterador actual\&. "
.ti -1c
.RI "void \fBavanza\fP ()"
.br
.RI "Avança la posició del iterador en una posició;\&. "
.ti -1c
.RI "void \fBlee_cjt_especies\fP ()"
.br
.RI "Lectura d'un conjunt d'espècies\&. "
.ti -1c
.RI "void \fBimprime_cjt_especies\fP () const"
.br
.RI "Escriptura del conjunt d'espècies\&. "
.ti -1c
.RI "void \fBtabla_distancias\fP () const"
.br
.RI "Escriu una taula de les distàncies entre espècies\&. "
.in -1c
.SS "Mètodes Privats"

.in +1c
.ti -1c
.RI "void \fBelimina_especie_tabla_dist\fP (const string &id)"
.br
.RI "Actualitza la taula de distàncies si s'elimina una espècie\&. "
.ti -1c
.RI "void \fBafegeix_especie_tabla_dist\fP (const string &id)"
.br
.RI "Actualitza la taula de distàncies si s'afegeix una espècie\&. "
.in -1c
.SS "Atributs Privats"

.in +1c
.ti -1c
.RI "map< string, \fBEspecie\fP > \fBcjt_especies\fP"
.br
.RI "Mapa on guardem les espècies del conjunt d'espècies\&. "
.ti -1c
.RI "map< string, map< string, double > > \fBtaula_distancies\fP"
.br
.RI "Nested map\&. Mapa on guardem les distancies entre les espècies\&. "
.ti -1c
.RI "map< string, \fBEspecie\fP >::const_iterator \fBit\fP"
.br
.RI "Iterator\&. Iterador del mapa d'especies\&. "
.in -1c
.SH "Descripció Detallada"
.PP 
Representa un conjunt d'espècies ordenades alfabèticament\&. 

Ofereix la possibilitat de calcular distàncies entre diferents especies i modificar el conjunt, ja sigui creant noves especies o eliminant\&. Es pot consultar el gen d'una especie i si una especie existeix\&.També inclou la possibilitat d'imprimir una taula de distancies entre especies\&. 
.PP
Definició a la línia 27 del fitxer Cjt_especies\&.hh\&.
.SH "Documentació del Constructor i el Destructor"
.PP 
.SS "Cjt_especies::Cjt_especies ()"

.PP
Crea un conjunt d'espècies buit\&. 
.PP
\fBPrecondició\fP
.RS 4
Cert\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
El resultat és un conjunt d'especies buit\&. 
.RE
.PP

.PP
Definició a la línia 15 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
15                            {
16 // Mètode constructor d'especie\&. Posem el mapa d'especies i el nested map de la taula
17 // de distàncies com a dos mapes buits\&.
18   Cjt_especies::cjt_especies = map<string, Especie> ();
19   Cjt_especies::taula_distancies = map<string,map<string,double>>();
20 }
.fi
.SH "Documentació de les Funcions Membre"
.PP 
.SS "void Cjt_especies::elimina_especie_tabla_dist (const string & id)\fC [private]\fP"

.PP
Actualitza la taula de distàncies si s'elimina una espècie\&. 
.PP
\fBPrecondició\fP
.RS 4
La espècie la qual es vol eliminar existeix dins la taula de distàncies\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
S'ha actualitzat la taula\&. 
.RE
.PP

.PP
Definició a la línia 202 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
202                                                               {
203   //Es posiciona un iterador apuntant a la posició de l'id demanat\&.
204   map<string,map<string,double>>::const_iterator it = Cjt_especies::taula_distancies\&.find(id);
205   //Es posiciona un iterador apuntant a la primera posició del mapa de distancies\&.
206   //Inv: Farà tantes iteracions fins que l'iterador sigui igual al primer que hem buscat\&. Així ens
207   //estalviem bucles innecessaris\&. Aquest bucle elimina la especie demanada del map interior\&.
208   for (map<string,map<string,double>>::iterator it2 = Cjt_especies::taula_distancies\&.begin(); it2 != it; ++it2) {
209       it2->second\&.erase(it2->second\&.find(id));
210     }
211   //Eliminem la especie del mapa gran de la taula de distancies\&.
212   Cjt_especies::taula_distancies\&.erase(it);
213 }
.fi
.SS "void Cjt_especies::afegeix_especie_tabla_dist (const string & id)\fC [private]\fP"

.PP
Actualitza la taula de distàncies si s'afegeix una espècie\&. 
.PP
\fBPrecondició\fP
.RS 4
La espècie la qual es vol afegir existeix no existeix dins la taula de distàncies\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
S'ha actualitzat la taula\&. 
.RE
.PP

.PP
Definició a la línia 217 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
217                                                               {
218   //Es posiciona un iterador apuntant a la taula d'especies, a la posició on esta el id demanat\&.
219   map<string,Especie>::const_iterator esp = Cjt_especies::cjt_especies\&.find(id);
220   //Es crea un map auxiliar on s'aniran ficant les distancies\&.
221   map<string, double> aux;
222   //Inv: Recorregut del mapa, de principi a final\&. 
223   for (map<string,Especie>::const_iterator it = Cjt_especies::cjt_especies\&.begin(); it != Cjt_especies::cjt_especies\&.end(); ++it) {
224     map<string,map<string,double>>::iterator itt = Cjt_especies::taula_distancies\&.find(it->first);
225     //Calcula la distancia entre dues especies, la que entra pel parametre explícit
226     //i la que apunta el iterador\&.
227     double x = it->second\&.distancia(esp->second);
228     //If per fer les operacions si el identificador està a la part baixa
229     // i per tant només es fica una distancia al map interior\&.
230     if (id > it->first) {
231       itt->second\&.insert(make_pair(id, x));
232     }
233     //If per fer les operacions si l'identificador està a la part alta i s'ha
234     //de crear un nou map amb totes les altres especies\&.
235     else if (id < it->first) {
236       aux\&.insert(make_pair(it->first, x));
237     }
238       
239   }
240   //Finalment insertem el mapa a la taula de distancies\&.
241   Cjt_especies::taula_distancies\&.insert(make_pair(id, aux));
242 
243 }
.fi
.SS "void Cjt_especies::crea_especie (const string & id, const string & gen)"

.PP
Crea una espècie i la introdueix al conjunt\&. 
.PP
\fBPrecondició\fP
.RS 4
No existeix cap espècie amb el mateix identificador\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
S'ha creat una espècie\&. 
.RE
.PP

.PP
Definició a la línia 27 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
27                                                                   {
28 // Entren dos paràmetres explícits\&. El primer paràmetre és la clau
29 // del mapa\&. El valor d'aquesta clau serà una especie la qual es genera
30 // amb la constructora d'especie mitjançant un gen\&. A més, aquesta especie
31 // s'introdueix a la taula de distancies mitjançant el mètode afegeix
32 // especie tabla dist\&.
33       Especie e(gen);
34       Cjt_especies::cjt_especies\&.insert(make_pair(id,e));
35       afegeix_especie_tabla_dist(id);
36 }
.fi
.SS "void Cjt_especies::elimina_especie (const string & id)"

.PP
Elimina la espècie indicada del conjunt d'espècies\&. 
.PP
\fBPrecondició\fP
.RS 4
Cert\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
La espècie s'ha eliminat del paràmetre implícit\&. 
.RE
.PP
\fBParàmetres\fP
.RS 4
\fIstring\fP id 
.RE
.PP

.PP
Definició a la línia 42 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
42                                                    {
43 // S'elimina la espècie indicada pel paràmetre explícit\&.
44 // Es busca la espècie mitjaçant un iterador del mapa d'especies
45 // i s'elimina la espècie indicada\&.
46 // Observació: Aquesta funció no comprova si existeix una espècie 
47 // o no, per tant, s'ha de fer compravació prèvia amb la funció
48 // Cjt_especie::existe_especie(id)\&.
49     map<string, Especie>::const_iterator it = Cjt_especies::cjt_especies\&.find(id);
50     Cjt_especies::cjt_especies\&.erase(it);
51     Cjt_especies::elimina_especie_tabla_dist(id);     
52 }
.fi
.SS "bool Cjt_especies::existeix_especie (const string & id) const"

.PP
Consulta si existeix la espècie indicada\&. 
.PP
\fBPrecondició\fP
.RS 4
El id és un string vàlid\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
El resultat indica si existèix la espècie dins el conjunt d'espècies\&. 
.RE
.PP
\fBParàmetres\fP
.RS 4
\fIstring\fP id 
.RE
.PP
\fBRetorna\fP
.RS 4
bool 
.RE
.PP

.PP
Definició a la línia 55 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
55                                                           {
56 // Es consulta si existeix la espècie dins el map d'especies\&.
57 // Es busca la especie mitjançant un iterador\&. En el cas que
58 // l'iterador apuntes al final de mapa, la especie no existeix 
59 // i es retorna false, en cas contrari retorna true\&.
60   map<string, Especie>::const_iterator it = Cjt_especies::cjt_especies\&.find(id);
61   if (it != Cjt_especies::cjt_especies\&.end()) return true;
62   return false;
63 }
.fi
.SS "double Cjt_especies::calcular_distancia (const string & id, const string & id2) const"

.PP
Consulta la distàncie entre dues espècies\&. 
.PP
\fBPrecondició\fP
.RS 4
Les dues espècies existeixen al conjunt\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
Et retorna la distància entre dues espècies\&. Excepcions: Si retorna -1 vol dir que les dues espècies no existèixen dins el conjunt d'especies\&. Si retorna -2 vol dir que la espècie id no existeix dins el conjunt d'especies\&. Si retorna -3 vol dir que la espècie id2 no existeix dins el conjunt d'especies\&.
.RE
.PP
\fBParàmetres\fP
.RS 4
\fIstring\fP id1 
.br
\fIstring\fP id2 
.RE
.PP
\fBRetorna\fP
.RS 4
double 
.RE
.PP

.PP
Definició a la línia 66 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
66                                                                                  {
67 // Retorna la distància entre dues especies\&.
68 // Es fan comprovación abans de consultar-les\&. En el cas
69 // que no existeixin les dues espècies es retorna un -1\&.
70 // Si no existeix només la primera espècie retorna un -2\&.
71 // Si no existeix només la segona espècie retorna un -3\&.
72 // En cas que les dues especies existeixin, és fan unes comprovacions:
73 //    Com el map només calcula les distàncies necessaries ja que 
74 //    Distancia (a,b) = Distancia (b,a), el map ordena les distancies
75 //    per ordre alfabètic amb la seva clau\&. Per tant hem de tenir en 
76 //    compte que si es consulta distancia c a\&. No podem consultar de 
77 //    primeres\&. Per tant, amb dos iteradors mirem si apuntent al final,
78 //    En el cas que passés, cambien d'ordre els iteradors i aquests
79 //    accedeixen a la posició on hi ha la distància demanada\&.
80 // Observació: Aquesta funció no calcula les distàncies, sinó consulta
81 // el mapa de distàncies\&.  
82   if (not Cjt_especies::existeix_especie(id) and not Cjt_especies::existeix_especie(id2)) return -1; 
83   else if (not Cjt_especies::existeix_especie(id)) return -2;
84   else if (not Cjt_especies::existeix_especie(id2)) return -3;
85   else {
86       map<string,map<string,double>>::const_iterator it = Cjt_especies::taula_distancies\&.find(id);
87       map<string,double>::const_iterator it2 = it->second\&.find(id2);
88       if (it2 == it->second\&.end()) {
89         it = Cjt_especies::taula_distancies\&.find(id2);
90         it2 = it->second\&.find(id);
91         return it2->second;
92       }
93       return it2->second;
94     }
95 }
.fi
.SS "void Cjt_especies::obtener_gen (const string & id) const"

.PP
Consulta el gen de la espècie demanada\&. 
.PP
\fBPrecondició\fP
.RS 4
La espècie existeix al conjunt d'espècies\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
S'ha mostrat el gen de la espècie\&. 
.RE
.PP
\fBParàmetres\fP
.RS 4
\fIstring\fP 
.RE
.PP
\fBRetorna\fP
.RS 4
string 
.RE
.PP

.PP
Definició a la línia 99 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
99                                                      {
100 // Es consulta el gen d'una especie mitjançant una 
101 // funció de la classe Especie i un iterador\&.
102 // Observació: S'ha de comprovar prèviament que aquesta especie existeix\&.
103   map<string, Especie>::const_iterator it = Cjt_especies::cjt_especies\&.find(id);
104   cout << it->second\&.consultar_gen() << endl;
105   
106 }
.fi
.SS "bool Cjt_especies::final ()"

.PP
Consulta si l'iterador del mapa del conjunt d'especies apunta al final d'ell o no\&. 
.PP
\fBPrecondició\fP
.RS 4
Cert\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
El booleà retorna cert si apunta al final del mapa\&. 
.RE
.PP

.PP
Definició a la línia 109 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
109                          {
110 // Es fa comprovacions si l'iterador de l'àmbit
111 // privat apunta al final del conjunt d'especies\&.
112 // Retorna cert si apunta al final, en cas contrari
113 // retorna fals\&.
114   return it == Cjt_especies::cjt_especies\&.end();
115 
116 }
.fi
.SS "void Cjt_especies::inicio ()"

.PP
Posiciona l'iterador del mapa del conjunt d'especies apuntant al primer element\&. 
.PP
\fBPrecondició\fP
.RS 4
Cert\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
El iterador apunta al primer element del mapa\&. 
.RE
.PP

.PP
Definició a la línia 119 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
119                           {
120 // Es posiciona l'iterador de l'ambit
121 // privat apuntant a la primera posició 
122 // del mapa d'especies\&.
123   it = Cjt_especies::cjt_especies\&.begin();
124 }
.fi
.SS "void Cjt_especies::actual (string & act)"

.PP
El paràmetre explícit passa a tenir la informació del element apuntat pel iterador actual\&. 
.PP
\fBPrecondició\fP
.RS 4
Cert\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
El paràmetre explícit passa a tenir la informació del element apuntat pel iterador actual 
.RE
.PP

.PP
Definició a la línia 127 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
127                                      {
128 // Es modifica el string del paràmetre 
129 // explícit i se li adjudica el string
130 // al qual apunta el iterador\&.
131   act = it->first;
132 }
.fi
.SS "void Cjt_especies::avanza ()"

.PP
Avança la posició del iterador en una posició;\&. 
.PP
\fBPrecondició\fP
.RS 4
Cert\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
El iterador del mapa d'especies apunta una posició endavant\&. 
.RE
.PP

.PP
Definició a la línia 136 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
136                           {
137 // Es posiciona l'iterador de l'ambit
138 // privat apuntant a una posició més endavant 
139 // de la qua apuntava l'iterador abans\&.
140 // Observació: S'avançarà l'iterador sempre
141 // i quan l'iterador no estigui apuntant al final\&.
142   if (not final()){
143         ++Cjt_especies::it;
144 
145   }
146 }
.fi
.SS "void Cjt_especies::lee_cjt_especies ()"

.PP
Lectura d'un conjunt d'espècies\&. 
.PP
\fBPrecondició\fP
.RS 4
Estan preparats al canal estandar d'entrada un enter i les dades dels elements que llegirem\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
El paràmetre implícit conté un conjunt d'especies llegits pel canal estàndar\&. 
.RE
.PP

.PP
Definició a la línia 152 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
152                                     {
153   //La condició de si es llegeix un nou conjunt
154   //d'especies es que es descarta el contingut previ\&.
155   //Per tant fem clear dels dos mapes\&.
156   Cjt_especies::taula_distancies\&.clear();
157   Cjt_especies::cjt_especies\&.clear();
158   //int que indica el nombre d'especies que es volen afegir\&.
159   int n;
160   cin >> n;
161   //Inv: el bucle for mai farà més de n iteracions\&. 
162   //A cada iteració farà una crida a la funció crea especie\&.
163   for (int i = 0; i < n; ++i) {
164     string id, gen;
165     cin >> id >> gen;
166     Cjt_especies::crea_especie(id,gen);
167   }
168 }
.fi
.SS "void Cjt_especies::imprime_cjt_especies () const"

.PP
Escriptura del conjunt d'espècies\&. 
.PP
\fBPrecondició\fP
.RS 4
Cert\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
S'ha escrit pel canal estàndar de sortida les espècies del paràmetre implícit\&. 
.RE
.PP

.PP
Definició a la línia 171 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
171                                               {
172   //Inv: És situa un iterador apuntant a la primera posició del
173   //mapa d'especies\&. Avançarà una iteració fins que el punter apunti al final\&.
174   //A cada iteració s'impreix una especie\&.
175   for (map<string,Especie>::const_iterator it = Cjt_especies::cjt_especies\&.begin(); it != Cjt_especies::cjt_especies\&.end(); ++it) {
176     cout << it->first << " ";
177     it->second\&.escriure();
178   }
179 }
.fi
.SS "void Cjt_especies::tabla_distancias () const"

.PP
Escriu una taula de les distàncies entre espècies\&. 
.PP
\fBPrecondició\fP
.RS 4
Cert\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
S'ha imprès la taula de distàncies\&. 
.RE
.PP

.PP
Definició a la línia 182 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
182                                           {
183   //Inv: És situa un iterador apuntant a la primera posició del
184   //mapa de distancies\&. Avançarà una posició fins que el punter apunti al final\&.
185   //A cada iteració s'impreix un identificador de especie i s'executa un segon bucle\&.
186   for(map<string,map<string,double>>::const_iterator it = Cjt_especies::taula_distancies\&.begin(); it != Cjt_especies::taula_distancies\&.end(); ++it) {
187     cout << it->first << ":";
188     //Inv: És situa un iterador apuntant a la primera posició del
189     //map interior del map de distancies d'especies\&. Avançarà una posició fins que el punter apunti al final\&.
190     //A cada iteració s'impreix un identificador d'especie del map interior i la distancia respecte les dues especies\&.
191     for (map<string,double>::const_iterator it2 = it->second\&.begin(); it2 != it->second\&.end(); ++it2) {
192         cout << " " << it2->first << " (" << it2->second << ")"; 
193     }
194     cout << endl;
195   }
196 }
.fi
.SH "Documentació de les Dades Membre"
.PP 
.SS "map<string,\fBEspecie\fP> Cjt_especies::cjt_especies\fC [private]\fP"

.PP
Mapa on guardem les espècies del conjunt d'espècies\&. 
.PP
Definició a la línia 35 del fitxer Cjt_especies\&.hh\&.
.SS "map<string, map<string,double> > Cjt_especies::taula_distancies\fC [private]\fP"

.PP
Nested map\&. Mapa on guardem les distancies entre les espècies\&. 
.PP
Definició a la línia 39 del fitxer Cjt_especies\&.hh\&.
.SS "map<string, \fBEspecie\fP>::const_iterator Cjt_especies::it\fC [private]\fP"

.PP
Iterator\&. Iterador del mapa d'especies\&. 
.PP
Definició a la línia 58 del fitxer Cjt_especies\&.hh\&.

.SH "Autor"
.PP 
Generat automàticament per Doxygen per a Creació d'un arbre filogenètic\&. Xavier Coll Ribas a partir del codi font\&.
