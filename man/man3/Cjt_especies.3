.TH "Cjt_especies" 3 "Dc Mai 20 2020" "Version v6.3 19/05/2020" "Creació d'un arbre filogenètic. Xavier Coll Ribas" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Cjt_especies \- Representa un conjunt d'espècies ordenades alfabèticament\&.  

.SH SYNOPSIS
.br
.PP
.SS "Mètodes públics"

.in +1c
.ti -1c
.RI "\fBCjt_especies\fP ()"
.br
.RI "Crea un conjunt d'espècies buit\&. "
.ti -1c
.RI "void \fBcrea_especie\fP (const string &id, const string &gen)"
.br
.RI "Crea una espècie i la introdueix al conjunt\&. "
.ti -1c
.RI "void \fBelimina_especie\fP (const string &id)"
.br
.RI "Elimina la espècie indicada del conjunt d'espècies del paràmetre implícit\&. "
.ti -1c
.RI "bool \fBexisteix_especie\fP (const string &id) const"
.br
.RI "Consulta si existeix la espècie indicada al conjunt d'espècies\&. "
.ti -1c
.RI "double \fBcalcular_distancia\fP (const string &id, const string &id2) const"
.br
.RI "Consulta la distàncie entre dues espècies\&. "
.ti -1c
.RI "void \fBobtener_gen\fP (const string &id) const"
.br
.RI "Consulta el gen de la espècie demanada\&. "
.ti -1c
.RI "bool \fBfinal\fP ()"
.br
.RI "Consulta si és el final del conjunt d'espècies del paràmetre implícit\&. "
.ti -1c
.RI "void \fBinicio\fP ()"
.br
.RI "Apuntem al primer element del conjunt d'espècies del paràmetre implícit\&. "
.ti -1c
.RI "void \fBactual\fP (string &act)"
.br
.RI "El paràmetre explícit passa a tenir la informació del element apuntat en aquell moment\&. "
.ti -1c
.RI "void \fBavanza\fP ()"
.br
.RI "S'avança una espècie del conjunt\&. "
.ti -1c
.RI "void \fBlee_cjt_especies\fP ()"
.br
.RI "Lectura d'un conjunt d'espècies\&. "
.ti -1c
.RI "void \fBimprime_cjt_especies\fP () const"
.br
.RI "Escriptura del conjunt d'espècies\&. "
.ti -1c
.RI "void \fBtabla_distancias\fP () const"
.br
.RI "Escriu una taula de les distàncies entre espècies\&. "
.in -1c
.SS "Mètodes Privats"

.in +1c
.ti -1c
.RI "void \fBelimina_especie_tabla_dist\fP (const string &id)"
.br
.RI "Actualitza la taula de distàncies si s'elimina una espècie\&. "
.ti -1c
.RI "void \fBafegeix_especie_tabla_dist\fP (const string &id)"
.br
.RI "Actualitza la taula de distàncies si s'afegeix una espècie\&. "
.in -1c
.SS "Atributs Privats"

.in +1c
.ti -1c
.RI "map< string, \fBEspecie\fP > \fBcjt_especies\fP"
.br
.RI "Estructura de dades on guardem les espècies del conjunt d'espècies\&. "
.ti -1c
.RI "map< string, map< string, double > > \fBtaula_distancies\fP"
.br
.RI "Estructura de dades on guardem les distancies entre les espècies\&. "
.ti -1c
.RI "map< string, \fBEspecie\fP >::const_iterator \fBit\fP"
.br
.RI "Iterator\&. Iterador del mapa d'espècies\&. "
.in -1c
.SH "Descripció Detallada"
.PP 
Representa un conjunt d'espècies ordenades alfabèticament\&. 

Ofereix la possibilitat de calcular distàncies entre diferents espècies i modificar el conjunt, ja sigui creant noves espècies o eliminant\&. Es pot consultar el gen d'una espècie i si una espècie existeix\&.També inclou la possibilitat d'imprimir una taula de distancies entre espècies\&.
.PP
\fBInvariant\fP
.RS 4
El conjunt d'espècies sempre estarà ordenat alfabèticament per un identificador d'espècie, no té mida màxima ni mida mínima\&. La taula de distàncies també tindrà el mateix identificador que la espècie i sempre s'imprimirà en ordre alfabètic\&. Quan es llegeix un conjunt d'espècies, es declarà la mida amb una, una variable n >= 0\&. 
.RE
.PP

.PP
Definició a la línia 33 del fitxer Cjt_especies\&.hh\&.
.SH "Documentació del Constructor i el Destructor"
.PP 
.SS "Cjt_especies::Cjt_especies ()"

.PP
Crea un conjunt d'espècies buit\&. 
.PP
\fBPrecondició\fP
.RS 4
Cert\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
El resultat és un conjunt d'espècies buit i ordenat alfabèticament\&. 
.RE
.PP

.PP
Definició a la línia 16 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
16                            {
17 // Mètode constructor d'espècie\&. Posem el mapa d'espècies i el nested map de la taula
18 // de distàncies com a dos mapes buits\&.
19   Cjt_especies::cjt_especies = map<string, Especie> ();
20   Cjt_especies::taula_distancies = map<string,map<string,double>>();
21 }
.fi
.SH "Documentació de les Funcions Membre"
.PP 
.SS "void Cjt_especies::elimina_especie_tabla_dist (const string & id)\fC [private]\fP"

.PP
Actualitza la taula de distàncies si s'elimina una espècie\&. 
.PP
\fBPrecondició\fP
.RS 4
La espècie la qual es vol eliminar existeix dins la taula de distàncies\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
S'ha actualitzat la taula\&. 
.RE
.PP

.PP
Definició a la línia 203 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
203                                                               {
204   //Es posiciona un iterador apuntant a la posició de l'id demanat\&.
205   map<string,map<string,double>>::const_iterator it = Cjt_especies::taula_distancies\&.find(id);
206   //Es posiciona un iterador apuntant a la primera posició del mapa de distancies\&.
207   //Inv: Farà tantes iteracions fins que l'iterador sigui igual al primer que hem buscat\&. Així ens
208   //estalviem bucles innecessaris\&. Aquest bucle elimina la espèci demanada del map interior\&.
209   for (map<string,map<string,double>>::iterator it2 = Cjt_especies::taula_distancies\&.begin(); it2 != it; ++it2) {
210       it2->second\&.erase(it2->second\&.find(id));
211     }
212   //Eliminem la espèci del mapa gran de la taula de distancies\&.
213   Cjt_especies::taula_distancies\&.erase(it);
214 }
.fi
.SS "void Cjt_especies::afegeix_especie_tabla_dist (const string & id)\fC [private]\fP"

.PP
Actualitza la taula de distàncies si s'afegeix una espècie\&. 
.PP
\fBPrecondició\fP
.RS 4
La espècie la qual es vol afegir existeix no existeix dins la taula de distàncies\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
S'ha actualitzat la taula\&. 
.RE
.PP

.PP
Definició a la línia 218 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
218                                                               {
219   //Es posiciona un iterador apuntant a la taula d'espècis, a la posició on esta el id demanat\&.
220   map<string,Especie>::const_iterator esp = Cjt_especies::cjt_especies\&.find(id);
221   //Es crea un map auxiliar on s'aniran ficant les distancies\&.
222   map<string, double> aux;
223   //Inv: Recorregut del mapa, de principi a final\&. 
224   for (map<string,Especie>::const_iterator it = Cjt_especies::cjt_especies\&.begin(); it != Cjt_especies::cjt_especies\&.end(); ++it) {
225     map<string,map<string,double>>::iterator itt = Cjt_especies::taula_distancies\&.find(it->first);
226     //Calcula la distancia entre dues espècis, la que entra pel parametre explícit
227     //i la que apunta el iterador\&.
228     double x = it->second\&.distancia(esp->second);
229     //If per fer les operacions si el identificador està a la part baixa
230     // i per tant només es fica una distancia al map interior\&.
231     if (id > it->first) {
232       itt->second\&.insert(make_pair(id, x));
233     }
234     //If per fer les operacions si l'identificador està a la part alta i s'ha
235     //de crear un nou map amb totes les altres espècis\&.
236     else if (id < it->first) {
237       aux\&.insert(make_pair(it->first, x));
238     }
239       
240   }
241   //Finalment insertem el mapa a la taula de distancies\&.
242   Cjt_especies::taula_distancies\&.insert(make_pair(id, aux));
243 
244 }
.fi
.SS "void Cjt_especies::crea_especie (const string & id, const string & gen)"

.PP
Crea una espècie i la introdueix al conjunt\&. 
.PP
\fBPrecondició\fP
.RS 4
No existeix cap espècie amb el mateix identificador\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
S'ha creat una espècie i s'ha introduit al conjunt d'espècies\&. Aquest es manté ordenat\&. 
.RE
.PP

.PP
Definició a la línia 28 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
28                                                                   {
29 // Entren dos paràmetres explícits\&. El primer paràmetre és la clau
30 // del mapa\&. El valor d'aquesta clau serà una espècie la qual es genera
31 // amb la constructora d'espècie mitjançant un gen\&. A més, aquesta espècie
32 // s'introdueix a la taula de distancies mitjançant el mètode afegeix
33 // espècie tabla dist\&.
34       Especie e(gen);
35       Cjt_especies::cjt_especies\&.insert(make_pair(id,e));
36       afegeix_especie_tabla_dist(id);
37 }
.fi
.SS "void Cjt_especies::elimina_especie (const string & id)"

.PP
Elimina la espècie indicada del conjunt d'espècies del paràmetre implícit\&. 
.PP
\fBPrecondició\fP
.RS 4
Cert\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
La espècie s'ha eliminat del conjunt d'espècies\&. 
.RE
.PP
\fBParàmetres\fP
.RS 4
\fIstring\fP id 
.RE
.PP

.PP
Definició a la línia 43 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
43                                                    {
44 // S'elimina la espècie indicada pel paràmetre explícit\&.
45 // Es busca la espècie mitjaçant un iterador del mapa d'espècies
46 // i s'elimina la espècie indicada\&.
47 // Observació: Aquesta funció no comprova si existeix una espècie 
48 // o no, per tant, s'ha de fer compravació prèvia amb la funció
49 // Cjt_espècie::existe_espècie(id)\&.
50     map<string, Especie>::const_iterator it = Cjt_especies::cjt_especies\&.find(id);
51     Cjt_especies::cjt_especies\&.erase(it);
52     Cjt_especies::elimina_especie_tabla_dist(id);     
53 }
.fi
.SS "bool Cjt_especies::existeix_especie (const string & id) const"

.PP
Consulta si existeix la espècie indicada al conjunt d'espècies\&. 
.PP
\fBPrecondició\fP
.RS 4
El id és un string vàlid\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
El resultat indica si existèix la espècie dins el conjunt d'espècies\&. 
.RE
.PP
\fBParàmetres\fP
.RS 4
\fIstring\fP id 
.RE
.PP
\fBRetorna\fP
.RS 4
bool 
.RE
.PP

.PP
Definició a la línia 56 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
56                                                           {
57 // Es consulta si existeix la espècie dins el map d'espècies\&.
58 // Es busca la espècie mitjançant un iterador\&. En el cas que
59 // l'iterador apuntes al final de mapa, la espècie no existeix 
60 // i es retorna false, en cas contrari retorna true\&.
61   map<string, Especie>::const_iterator it = Cjt_especies::cjt_especies\&.find(id);
62   if (it != Cjt_especies::cjt_especies\&.end()) return true;
63   return false;
64 }
.fi
.SS "double Cjt_especies::calcular_distancia (const string & id, const string & id2) const"

.PP
Consulta la distàncie entre dues espècies\&. 
.PP
\fBPrecondició\fP
.RS 4
Les dues espècies existeixen al conjunt\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
Et retorna la distància entre dues espècies\&. Excepcions: Si retorna -1 vol dir que les dues espècies no existèixen dins el conjunt d'espècies\&. Si retorna -2 vol dir que la espècie id no existeix dins el conjunt d'espècies\&. Si retorna -3 vol dir que la espècie id2 no existeix dins el conjunt d'espècies\&.
.RE
.PP
\fBParàmetres\fP
.RS 4
\fIstring\fP id1 
.br
\fIstring\fP id2 
.RE
.PP
\fBRetorna\fP
.RS 4
double 
.RE
.PP

.PP
Definició a la línia 67 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
67                                                                                  {
68 // Retorna la distància entre dues espècies\&.
69 // Es fan comprovación abans de consultar-les\&. En el cas
70 // que no existeixin les dues espècies es retorna un -1\&.
71 // Si no existeix només la primera espècie retorna un -2\&.
72 // Si no existeix només la segona espècie retorna un -3\&.
73 // En cas que les dues espècies existeixin, és fan unes comprovacions:
74 //    Com el map només calcula les distàncies necessaries ja que 
75 //    Distancia (a,b) = Distancia (b,a), el map ordena les distancies
76 //    per ordre alfabètic amb la seva clau\&. Per tant hem de tenir en 
77 //    compte que si es consulta distancia c a\&. No podem consultar de 
78 //    primeres\&. Per tant, amb dos iteradors mirem si apuntent al final,
79 //    En el cas que passés, cambien d'ordre els iteradors i aquests
80 //    accedeixen a la posició on hi ha la distància demanada\&.
81 // Observació: Aquesta funció no calcula les distàncies, sinó consulta
82 // el mapa de distàncies\&.  
83   if (not Cjt_especies::existeix_especie(id) and not Cjt_especies::existeix_especie(id2)) return -1; 
84   else if (not Cjt_especies::existeix_especie(id)) return -2;
85   else if (not Cjt_especies::existeix_especie(id2)) return -3;
86   else {
87       map<string,map<string,double>>::const_iterator it = Cjt_especies::taula_distancies\&.find(id);
88       map<string,double>::const_iterator it2 = it->second\&.find(id2);
89       if (it2 == it->second\&.end()) {
90         it = Cjt_especies::taula_distancies\&.find(id2);
91         it2 = it->second\&.find(id);
92         return it2->second;
93       }
94       return it2->second;
95     }
96 }
.fi
.SS "void Cjt_especies::obtener_gen (const string & id) const"

.PP
Consulta el gen de la espècie demanada\&. 
.PP
\fBPrecondició\fP
.RS 4
La espècie existeix al conjunt d'espècies\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
S'ha mostrat el gen de la espècie\&. 
.RE
.PP
\fBParàmetres\fP
.RS 4
\fIstring\fP 
.RE
.PP
\fBRetorna\fP
.RS 4
string 
.RE
.PP

.PP
Definició a la línia 100 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
100                                                      {
101 // Es consulta el gen d'una espècie mitjançant una 
102 // funció de la classe espècie i un iterador\&.
103 // Observació: S'ha de comprovar prèviament que aquesta espècie existeix\&.
104   map<string, Especie>::const_iterator it = Cjt_especies::cjt_especies\&.find(id);
105   cout << it->second\&.consultar_gen() << endl;
106   
107 }
.fi
.SS "bool Cjt_especies::final ()"

.PP
Consulta si és el final del conjunt d'espècies del paràmetre implícit\&. 
.PP
\fBPrecondició\fP
.RS 4
Cert\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
S'ha indicat si és el final del conjunt\&. 
.RE
.PP
\fBRetorna\fP
.RS 4
bool cert si apunta al final del conjunt, en cas contrari, fals\&. 
.RE
.PP

.PP
Definició a la línia 110 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
110                          {
111 // Es fa comprovacions si l'iterador de l'àmbit
112 // privat apunta al final del conjunt d'espècies\&.
113 // Retorna cert si apunta al final, en cas contrari
114 // retorna fals\&.
115   return it == Cjt_especies::cjt_especies\&.end();
116 
117 }
.fi
.SS "void Cjt_especies::inicio ()"

.PP
Apuntem al primer element del conjunt d'espècies del paràmetre implícit\&. 
.PP
\fBPrecondició\fP
.RS 4
Cert\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
S'ha apuntat al primer element del conjunt\&. 
.RE
.PP

.PP
Definició a la línia 120 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
120                           {
121 // Es posiciona l'iterador de l'ambit
122 // privat apuntant a la primera posició 
123 // del mapa d'espècies\&.
124   it = Cjt_especies::cjt_especies\&.begin();
125 }
.fi
.SS "void Cjt_especies::actual (string & act)"

.PP
El paràmetre explícit passa a tenir la informació del element apuntat en aquell moment\&. 
.PP
\fBPrecondició\fP
.RS 4
Cert\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
El paràmetre explícit passa a tenir la informació del element apuntat en aquell moment\&. 
.RE
.PP

.PP
Definició a la línia 128 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
128                                      {
129 // Es modifica el string del paràmetre 
130 // explícit i se li adjudica el string
131 // al qual apunta el iterador\&.
132   act = it->first;
133 }
.fi
.SS "void Cjt_especies::avanza ()"

.PP
S'avança una espècie del conjunt\&. 
.PP
\fBPrecondició\fP
.RS 4
Cert\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
Si no estem al final del conjunt, avancem una espècie\&. 
.RE
.PP

.PP
Definició a la línia 137 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
137                           {
138 // Es posiciona l'iterador de l'ambit
139 // privat apuntant a una posició més endavant 
140 // de la qua apuntava l'iterador abans\&.
141 // Observació: S'avançarà l'iterador sempre
142 // i quan l'iterador no estigui apuntant al final\&.
143   if (not final()){
144         ++Cjt_especies::it;
145 
146   }
147 }
.fi
.SS "void Cjt_especies::lee_cjt_especies ()"

.PP
Lectura d'un conjunt d'espècies\&. 
.PP
\fBPrecondició\fP
.RS 4
Estan preparats al canal estandar d'entrada un enter i les dades dels elements que llegirem\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
El paràmetre implícit conté un conjunt d'espècies llegits pel canal estàndar\&. 
.RE
.PP

.PP
Definició a la línia 153 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
153                                     {
154   //La condició de si es llegeix un nou conjunt
155   //d'espècies es que es descarta el contingut previ\&.
156   //Per tant fem clear dels dos mapes\&.
157   Cjt_especies::taula_distancies\&.clear();
158   Cjt_especies::cjt_especies\&.clear();
159   //int que indica el nombre d'espècies que es volen afegir\&.
160   int n;
161   cin >> n;
162   //Inv: el bucle for mai farà més de n iteracions\&. 
163   //A cada iteració farà una crida a la funció crea espècie\&.
164   for (int i = 0; i < n; ++i) {
165     string id, gen;
166     cin >> id >> gen;
167     Cjt_especies::crea_especie(id,gen);
168   }
169 }
.fi
.SS "void Cjt_especies::imprime_cjt_especies () const"

.PP
Escriptura del conjunt d'espècies\&. 
.PP
\fBPrecondició\fP
.RS 4
Cert\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
S'ha escrit pel canal estàndar de sortida les espècies del paràmetre implícit\&. 
.RE
.PP

.PP
Definició a la línia 172 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
172                                               {
173   //Inv: És situa un iterador apuntant a la primera posició del
174   //mapa d'espècies\&. Avançarà una iteració fins que el punter apunti al final\&.
175   //A cada iteració s'impreix una espècie\&.
176   for (map<string,Especie>::const_iterator it = Cjt_especies::cjt_especies\&.begin(); it != Cjt_especies::cjt_especies\&.end(); ++it) {
177     cout << it->first << " ";
178     it->second\&.escriure();
179   }
180 }
.fi
.SS "void Cjt_especies::tabla_distancias () const"

.PP
Escriu una taula de les distàncies entre espècies\&. 
.PP
\fBPrecondició\fP
.RS 4
Cert\&. 
.RE
.PP
\fBPostcondició\fP
.RS 4
S'ha imprès la taula de distàncies\&. 
.RE
.PP

.PP
Definició a la línia 183 del fitxer Cjt_especies\&.cc\&.
.PP
.nf
183                                           {
184   //Inv: És situa un iterador apuntant a la primera posició del
185   //mapa de distancies\&. Avançarà una posició fins que el punter apunti al final\&.
186   //A cada iteració s'impreix un identificador de espèci i s'executa un segon bucle\&.
187   for(map<string,map<string,double>>::const_iterator it = Cjt_especies::taula_distancies\&.begin(); it != Cjt_especies::taula_distancies\&.end(); ++it) {
188     cout << it->first << ":";
189     //Inv: És situa un iterador apuntant a la primera posició del
190     //map interior del map de distancies d'espècis\&. Avançarà una posició fins que el punter apunti al final\&.
191     //A cada iteració s'impreix un identificador d'espèci del map interior i la distancia respecte les dues espècis\&.
192     for (map<string,double>::const_iterator it2 = it->second\&.begin(); it2 != it->second\&.end(); ++it2) {
193         cout << " " << it2->first << " (" << it2->second << ")"; 
194     }
195     cout << endl;
196   }
197 }
.fi
.SH "Documentació de les Dades Membre"
.PP 
.SS "map<string,\fBEspecie\fP> Cjt_especies::cjt_especies\fC [private]\fP"

.PP
Estructura de dades on guardem les espècies del conjunt d'espècies\&. 
.PP
Definició a la línia 41 del fitxer Cjt_especies\&.hh\&.
.SS "map<string, map<string,double> > Cjt_especies::taula_distancies\fC [private]\fP"

.PP
Estructura de dades on guardem les distancies entre les espècies\&. 
.PP
Definició a la línia 45 del fitxer Cjt_especies\&.hh\&.
.SS "map<string, \fBEspecie\fP>::const_iterator Cjt_especies::it\fC [private]\fP"

.PP
Iterator\&. Iterador del mapa d'espècies\&. 
.PP
Definició a la línia 64 del fitxer Cjt_especies\&.hh\&.

.SH "Autor"
.PP 
Generat automàticament per Doxygen per a Creació d'un arbre filogenètic\&. Xavier Coll Ribas a partir del codi font\&.
